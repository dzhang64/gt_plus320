<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gt_plus.modules.projectbg.dao.bgcolumn.ProjectBgColumnDao">
    
	<sql id="projectBgColumnColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.owner_code AS "ownerCode",
		a.project_info_id AS "projectInfo.id",
		a.sort AS "sort",
		a.bg_sort AS "bgSort",
		a.bg_type AS "bgType",
		a.bg_num AS "bgNum",
		a.bg_count AS "bgCount",
		a.bg_column_price AS "bgColumnPrice",
		a.bg_column_money AS "bgColumnMonry",
		projectInfo.projectNum AS "projectInfo.projectNum"
	</sql>
	
	<sql id="projectBgColumnJoins">
		LEFT JOIN project_info projectInfo ON projectInfo.id = a.project_info_id
	</sql>
	
    
	<select id="get" resultType="ProjectBgColumn" >
		SELECT 
			<include refid="projectBgColumnColumns"/>
		FROM project_bg_column a
		<include refid="projectBgColumnJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ProjectBgColumn" >
		SELECT 
			<include refid="projectBgColumnColumns"/>
		FROM project_bg_column a
		<include refid="projectBgColumnJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${sqlMap.dsf}
			<if test="ownerCode != null and ownerCode != ''">
				AND a.owner_code LIKE 
				<if test="dbName == 'oracle'">#{ownerCode}||'%'</if>
				<if test="dbName == 'mssql'">#{ownerCode}+'%'</if>
				<if test="dbName == 'mysql'">concat('#{ownerCode},'%')</if>
				<if test="dbName == 'dm'">concat(#{ownerCode},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ProjectBgColumn" >
		SELECT 
			<include refid="projectBgColumnColumns"/>
		FROM project_bg_column a
		<include refid="projectBgColumnJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO project_bg_column(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			owner_code,
			project_info_id,
			sort,
			bg_sort,
			bg_type,
			bg_num,
			bg_count,
			bg_column_price,
			bg_column_money
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{ownerCode},
			#{projectInfo.id},
			#{sort},
			#{bgSort},
			#{bgType},
			#{bgNum},
			#{bgCount},
			#{bgColumnPrice},
			#{bgColumnMonry}
		)
	</insert>
	
	<insert id="insertV">
		INSERT INTO project_bg_column_V(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			owner_code,
			project_info_id,
			sort,
			bg_sort,
			bg_type,
			bg_num,
			bg_count,
			bg_column_price,
			bg_column_money
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{ownerCode},
			#{projectInfo.id},
			#{sort},
			#{bgSort},
			#{bgType},
			#{bgNum},
			#{bgCount},
			#{bgColumnPrice},
			#{bgColumnMonry}
		)
	</insert>
	
	<update id="update">
		UPDATE project_bg_column SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			owner_code = #{ownerCode},
			project_info_id = #{projectInfo.id},
			sort = #{sort},
			bg_sort = #{bgSort},
			bg_type = #{bgType},
			bg_num = #{bgNum},
			bg_count = #{bgCount},
			bg_column_price = #{bgColumnPrice},
			bg_column_money = #{bgColumnMonry}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM project_bg_column
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE project_bg_column SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="ProjectBgColumn" statementType="STATEMENT">
		select * FROM project_bg_column  where ${propertyName} = '${value}'
	</select>
	
	
</mapper>